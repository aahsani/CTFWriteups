pkey = '48564396752059338791464352725210493148212425902751190745668164451763507023284970474595680869078726765719920168392505794415687815488076204724659643390252172928332322944711949999326843460702414647825442748821062427474599006915155109396213406624079900714394311217571510958430682853948004734434233860146109894977'

# 256-bit numbers has almost 77 digits in decimal form. Here we have 308 digit. If we devide it to 4, we get 4 parts, with each part having 77 digits. 
'''
prime numbers: 
  P = (10**77)a + b
  Q = (10**77)b + a
  --> PQ = (10**77**2)ab + (10**77)(a**2+b**2) + ab

'''

part1 = pkey[0:77] # (10**77**2) ab
part23 = pkey[77:77*3] # 10**77 (a**2 + b**2)
part4 = pkey[77*3:] # ab
# print(part1 + part4)
# print(part23)

'''
# State 1 
  --> ab is concat(part1, part4) 
  4856439675205933879146435272521049314821242590275119074566816445176350702328496213406624079900714394311217571510958430682853948004734434233860146109894977
  --> a^2 + b^2 = part23
  9704745956808690787267657199201683925057944156878154880762047246596433902521729283323229447119499993268434607024146478254427488210624274745990069151551093
  result:
    https://quickmath.com/webMathematica3/quickmath/equations/solve/advanced.jsp#c=solve_solveequationsadvanced&v1=%2528x*x%2529%2520%2B%2520%2528y*y%2529%2520%253D%25209704745956808690787267657199201683925057944156878154880762047246596433902521729283323229447119499993268434607024146478254427488210624274745990069151551093%250Ax*y%2520%253D%25204856439675205933879146435272521049314821242590275119074566816445176350702328496213406624079900714394311217571510958430682853948004734434233860146109894977&v2=x%250Ay
  This state gives us complex results so the part1 should be minus 1 and an '1' added to middle part.
'''

print(str(int(part1)-1) + part4)
print(int('1' + part23) - int(part4 + str(int(part1)-1)))

'''
# State 2
  --> ab is concat(part1 - '1', part4) 
  4856439675205933879146435272521049314821242590275119074566816445176350702328396213406624079900714394311217571510958430682853948004734434233860146109894977
  --> a^2 + b^2 = concat('1',part23)
  10083405294400700715828226077444532829214875871483354407318623860581822913023980718926477387780708528915709396530998265828524737019878606581538305644527810
  https://quickmath.com/webMathematica3/quickmath/equations/solve/advanced.jsp#c=solve_solveequationsadvanced&v1=%2528x*x%2529%2520%2B%2520%2528y*y%2529%2520%253D%252010083405294400700715828226077444532829214875871483354407318623860581822913023980718926477387780708528915709396530998265828524737019878606581538305644527810%250Ax*y%2520%253D%25204856439675205933879146435272521049314821242590275119074566816445176350702328396213406624079900714394311217571510958430682853948004734434233860146109894977&v2=x%250Ay

  result :
    a = 60725109882869292648940863628350771736250400726013095444943539503502901307363
    b = 79974160352667353769493236336930449438771170009858935018137670526822423479179

  So:
    P = 6072510988286929264894086362835077173625040072601309544494353950350290130736379974160352667353769493236336930449438771170009858935018137670526822423479179
    Q = 7997416035266735376949323633693044943877117000985893501813767052682242347917960725109882869292648940863628350771736250400726013095444943539503502901307363

  Phi(PQ) = (P-1)(Q-1) = 48564396752059338791464352725210493148212425902751190745668164451763507023284970474595680869078726765719920168392505794415687815488076204724659643390252158858405299391047308155916846932580297145668369161618016119353595974382676455055514136388543254295960211252290289783409112118075974271353023829820785108436

  Private Key = inverse(31337, Phi) = 41320883000930470376769123933761603816918910931009828600432404785951762701019471160741125155957688730714179131692548169783498236090199312205175992332204528565008153226648829733580460470478618335991183806880721313154575404951504685232956997112924938229351473102716150125890709270327718096725457905176360000837
    --> https://www.dcode.fr/modular-inverse
  N = P*Q = 48564396752059338791464352725210493148212425902751190745668164451763507023284970474595680869078726765719920168392505794415687815488076204724659643390252172928332322944711949999326843460702414647825442748821062427474599006915155109396213406624079900714394311217571510958430682853948004734434233860146109894977

  Finaly use this link to decrypt:
    https://www.dcode.fr/rsa-cipher
  
